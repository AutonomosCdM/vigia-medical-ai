# VIGIA Medical AI - Technical Architecture

## Objetivo
Decisiones técnicas principales: stack médico-grado con MONAI+PyTorch, Google Cloud ADK, y arquitectura de 3 capas para procesamiento médico seguro.

## Código Eraser.io
```
colorMode bold
styleMode shadow
direction down

// Layer 1: Input Isolation
Input_Layer [icon: shield, color: green] {
  WhatsApp_API [icon: mobile, color: blue]
  Input_Validation [icon: check, color: green]
  Format_Sanitization [icon: filter, color: orange]
}

// Layer 2: Medical Orchestration
Orchestration_Layer [icon: hub, color: purple] {
  Master_Orchestrator [icon: server, color: blue] {
    Agent_Factory [icon: cog, color: green]
    Session_Manager [icon: clock, color: orange]
    Medical_Dispatcher [icon: medical, color: red]
  }
  
  Google_Cloud_ADK [icon: cloud, color: blue] {
    A2A_Protocol [icon: network, color: purple]
    Agent_Coordination [icon: users, color: green]
    Sequential_Processing [icon: arrow-right, color: orange]
  }
}

// Layer 3: Specialized Medical Processing
Processing_Layer [icon: medical, color: red] {
  Medical_AI_Stack [icon: brain, color: purple] {
    MONAI_Framework [icon: medical, color: green]
    PyTorch_2_3 [icon: brain, color: blue]
    YOLOv5_7_0 [icon: eye, color: orange]
    MedGemma_27B [icon: brain, color: purple]
  }
  
  Medical_Agents [icon: users, color: blue] {
    Image_Analysis [icon: camera, color: green]
    Clinical_Assessment [icon: stethoscope, color: red]
    Risk_Assessment [icon: warning, color: orange]
    MONAI_Review [icon: medical, color: purple]
    Diagnostic_Fusion [icon: hub, color: blue]
  }
}

// Data & Security Infrastructure
Data_Infrastructure [icon: database, color: blue] {
  PHI_Tokenization [icon: key, color: red] {
    Cryptography_41 [icon: lock, color: red]
    JWT_Tokens [icon: key, color: orange]
    Session_Encryption [icon: shield, color: green]
  }
  
  Medical_Storage [icon: storage, color: green] {
    Supabase_2_4 [icon: database, color: blue]
    Redis_5_0 [icon: cache, color: orange]
    Vector_Search [icon: search, color: purple]
  }
}

// Communication Infrastructure
Communication_Stack [icon: network, color: green] {
  Patient_Comm [icon: mobile, color: blue] {
    Twilio_WhatsApp [icon: mobile, color: green]
    FastAPI_0_110 [icon: api, color: blue]
    Celery_5_3 [icon: queue, color: orange]
  }
  
  Medical_Team_Comm [icon: slack, color: purple] {
    Slack_SDK [icon: slack, color: green]
    Block_Kit_UI [icon: layout, color: blue]
    Real_Time_Updates [icon: notification, color: orange]
  }
}

// Connections
Input_Layer > Orchestration_Layer: "Validated Input"
Orchestration_Layer > Processing_Layer: "Agent Coordination"
Processing_Layer > Data_Infrastructure: "Medical Analysis"
Data_Infrastructure > Communication_Stack: "Results Distribution"
Communication_Stack > Input_Layer: "Feedback Loop"

// Security Connections
PHI_Tokenization <> Medical_Storage: "Encrypted Data"
Google_Cloud_ADK <> Medical_Agents: "A2A Protocol"
```

## Notas Clave
- **3-Layer Security**: Input isolation → Medical orchestration → Specialized processing
- **Google Cloud ADK**: A2A protocol para coordinación de agentes médicos
- **Medical AI Stack**: MONAI (primario) + PyTorch 2.3 + YOLOv5 (backup)
- **HIPAA Architecture**: PHI tokenización con cryptography 41.0+ y audit completo

## Para Editar
1. Copia el código anterior
2. Ve a [eraser.io](https://eraser.io)
3. Crea nuevo diagrama → Diagram-as-code
4. Pega el código y edita