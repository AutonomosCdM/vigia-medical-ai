# VIGIA Medical AI - AWS Serverless Technical Architecture

## Objetivo
Stack técnico serverless: AWS Lambda + Step Functions + Bedrock para 9 agentes médicos, con arquitectura de 3 capas para procesamiento médico HIPAA-compliant en producción.

## Código Eraser.io
```
colorMode bold
styleMode shadow
direction down

// Layer 1: AWS Serverless Input & Validation
AWS_Input_Layer [icon: aws-apigateway, color: green] {
  Patient_Interfaces [icon: mobile, color: blue] {
    WhatsApp_Bot [icon: mobile, color: green]
    autonomos_dev_Web [icon: browser, color: blue]
    Voice_Input [icon: mic, color: orange]
    API_Gateway_Medical [icon: aws-apigateway, color: purple]
  }
  
  Serverless_Input_Processing [icon: aws-lambda, color: purple] {
    Lambda_Image_Validation [icon: camera, color: green]
    Lambda_Voice_Preprocessing [icon: mic, color: orange]
    Lambda_Format_Sanitization [icon: filter, color: blue]
    Lambda_PHI_Tokenization [icon: key, color: red]
  }
}

// Layer 2: AWS Step Functions Medical Orchestration
AWS_Orchestration_Layer [icon: aws-stepfunctions, color: purple] {
  Step_Functions_Medical_Workflow [icon: aws-stepfunctions, color: blue] {
    Lambda_Agent_Factory [icon: cog, color: green]
    DynamoDB_Session_Manager [icon: aws-dynamodb, color: orange]
    Lambda_Medical_Dispatcher [icon: medical, color: red]
    Step_Functions_A2A_Communication [icon: network, color: purple]
  }
  
  Lambda_Agent_Coordination [icon: aws-lambda, color: green] {
    Tier1_Lambda_Agents [icon: eye, color: blue]
    Tier2_Lambda_Agents [icon: medical, color: red]
    Tier3_Lambda_Agents [icon: slack, color: green]
    Step_Functions_Sequential_Processing [icon: arrow-right, color: orange]
  }
}

// Layer 3: AWS AI Services Medical Processing
AWS_Processing_Layer [icon: aws-bedrock, color: red] {
  AWS_Multimodal_AI_Stack [icon: aws-bedrock, color: purple] {
    AWS_Bedrock_Medical_LLM [icon: brain, color: blue]
    SageMaker_MONAI_Primary [icon: aws-sagemaker, color: green]
    Lambda_YOLOv5_Backup [icon: eye, color: orange]
    AWS_Transcribe_Medical [icon: mic, color: purple]
    Hume_AI_Voice_External [icon: mic, color: red]
    Lambda_Adaptive_Model_Selection [icon: cog, color: red]
  }
  
  Complete_Lambda_Medical_Agents [icon: aws-lambda, color: blue] {
    Lambda_Image_Analysis_Agent [icon: camera, color: green]
    Lambda_Voice_Analysis_Agent [icon: mic, color: orange]
    Lambda_Clinical_Assessment_Agent [icon: stethoscope, color: red]
    Lambda_Risk_Assessment_Agent [icon: warning, color: blue]
    Lambda_Diagnostic_Agent [icon: hub, color: purple]
    Lambda_MONAI_Review_Agent [icon: medical, color: green]
    Lambda_Protocol_Agent [icon: clipboard, color: red]
    Lambda_Communication_Agent [icon: slack, color: blue]
    Lambda_Workflow_Orchestration_Agent [icon: cog, color: orange]
  }
}

// AWS Serverless Data & Security Infrastructure
AWS_Data_Infrastructure [icon: aws-dynamodb, color: blue] {
  AWS_PHI_Tokenization [icon: key, color: red] {
    AWS_KMS_Encryption [icon: lock, color: red]
    Lambda_JWT_Tokens [icon: key, color: orange]
    DynamoDB_Session_Encryption [icon: shield, color: green]
    AWS_Secrets_Manager [icon: lock, color: purple]
  }
  
  AWS_Medical_Storage [icon: aws-s3, color: green] {
    DynamoDB_Medical_State [icon: aws-dynamodb, color: blue]
    S3_Medical_Imaging [icon: aws-s3, color: orange]
    DynamoDB_Vector_Search [icon: search, color: purple]
    CloudWatch_Audit_Logs [icon: aws-cloudwatch, color: red]
  }
}

// AWS Serverless Communication Infrastructure
AWS_Communication_Stack [icon: aws-apigateway, color: green] {
  Patient_Comm [icon: mobile, color: blue] {
    Twilio_WhatsApp [icon: mobile, color: green]
    API_Gateway_Medical [icon: aws-apigateway, color: blue]
    EventBridge_Async_Processing [icon: aws-eventbridge, color: orange]
    Lambda_Communication_Handler [icon: aws-lambda, color: purple]
  }
  
  Medical_Team_Comm [icon: slack, color: purple] {
    Lambda_Slack_Integration [icon: slack, color: green]
    DynamoDB_Block_Kit_State [icon: layout, color: blue]
    EventBridge_Real_Time_Updates [icon: notification, color: orange]
    S3_autonomos_dev_Frontend [icon: browser, color: red]
  }
}

// AWS Serverless Connections
AWS_Input_Layer > AWS_Orchestration_Layer: "API Gateway → Step Functions"
AWS_Orchestration_Layer > AWS_Processing_Layer: "Lambda Agent Coordination"
AWS_Processing_Layer > AWS_Data_Infrastructure: "Medical Analysis Results"
AWS_Data_Infrastructure > AWS_Communication_Stack: "DynamoDB → EventBridge"
AWS_Communication_Stack > AWS_Input_Layer: "autonomos.dev Feedback Loop"

// AWS Security Connections
AWS_PHI_Tokenization <> AWS_Medical_Storage: "KMS Encrypted Data"
Step_Functions_Medical_Workflow <> Complete_Lambda_Medical_Agents: "Step Functions A2A Protocol"
AWS_Bedrock_Medical_LLM <> Lambda_Medical_Agents: "Bedrock AI Processing"
```

## Notas Clave
- **AWS Serverless 3-Layer**: API Gateway → Step Functions → Lambda agents
- **Step Functions A2A**: Serverless protocol para coordinación de 9 agentes médicos
- **AWS AI Stack**: Bedrock + SageMaker MONAI + Transcribe Medical + Hume AI external
- **HIPAA Serverless**: KMS encryption, DynamoDB audit trail, Lambda execution roles
- **Production Domain**: autonomos.dev con S3 static website y API Gateway endpoints
- **Cost Efficient**: Pay-per-use serverless vs traditional container infrastructure

## Para Editar
1. Copia el código anterior
2. Ve a [eraser.io](https://eraser.io)
3. Crea nuevo diagrama → Diagram-as-code
4. Pega el código y edita